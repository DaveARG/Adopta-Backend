generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id       Int     @id @default(autoincrement())
  phone    String  @unique @db.VarChar()
  password String  @db.VarChar()
  name     String  @db.VarChar()
  lastName String? @db.VarChar()

  // Contacto
  celulares Json?
  email     String? @db.VarChar()
  direccion String? @db.VarChar()
  ubicacion Json?

  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt
  deletedAt DateTime?

  // Relaciones
  postsAdopcion PostAdopcion[]
  postsSeBusca  PostSeBusca[]
  likes         Like[]
  comments      Comment[]
  shareds       Shared[]
}

model PostAdopcion {
  id    Int    @id @default(autoincrement())
  title String
  foto  String @db.VarChar()

  // Foreign key
  userId Int

  // Contacto
  celulares Json?
  email     String? @db.VarChar()
  direccion String? @db.VarChar()
  ubicacion Json?

  disponible Boolean @default(true)

  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt
  deletedAt DateTime?

  // Relaciones
  // photos Photo[]
  petPostsAdopcion PetPostAdopcion[]
  user             User              @relation(fields: [userId], references: [id], onDelete: Cascade, onUpdate: Cascade)
}

enum Sexo {
  Masculino
  Femenino
}

model PetPostAdopcion {
  id          Int     @id @default(autoincrement())
  raza        String? @db.VarChar()
  descripcion String? @db.Text
  edad        String? @db.VarChar()
  sexo        Sexo
  foto        String  @db.VarChar()
  disponible  Boolean @default(true)

  postAdopcionId Int

  postAdopcion PostAdopcion @relation(fields: [postAdopcionId], references: [id], onDelete: Cascade, onUpdate: Cascade)
}

model PostSeBusca {
  id         Int     @id @default(autoincrement())
  title      String
  name       String  @db.VarChar()
  foto       String  @db.VarChar()
  recompensa Decimal @db.Decimal(9, 2)

  // Foreign key
  userId Int

  // Contacto
  celulares Json?
  email     String? @db.VarChar()
  direccion String? @db.VarChar()
  ubicacion Json?

  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt
  deletedAt DateTime?

  // Relaciones
  // photos Photo[]
  user User @relation(fields: [userId], references: [id], onDelete: Cascade, onUpdate: Cascade)
}

enum ModelType {
  postAdopcion
  postSeBusca
}

model Like {
  id        Int       @id @default(autoincrement())
  userId    Int
  modelType ModelType
  modelId   Int

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  // Relaciones
  user User @relation(fields: [userId], references: [id], onDelete: Cascade, onUpdate: Cascade)
}

model Comment {
  id        Int       @id @default(autoincrement())
  userId    Int
  modelType ModelType
  modelId   Int
  comment   String

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  user User @relation(fields: [userId], references: [id], onDelete: Cascade, onUpdate: Cascade)
}

model Shared {
  id        Int       @id @default(autoincrement())
  userId    Int
  modelType ModelType
  modelId   Int

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  user User @relation(fields: [userId], references: [id], onDelete: Cascade, onUpdate: Cascade)
}
